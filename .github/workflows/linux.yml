name: C/C++ CI

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:

    runs-on: ubuntu-latest
    container: devkitpro/devkitarm

    steps:
    - name: Checkout repo
      uses: actions/checkout@v1
    - name: Update System
      run: |
        sudo dpkg --add-architecture i386
        sudo apt-get update
        sudo apt-get install python libc6:i386 libncurses5:i386 libstdc++6:i386 -y
    - name: downgrade devkitpro stuff
      run: |        
        curl -LO "https://wii.leseratte10.de/devkitPro/devkitARM/r41%20(2012)/devkitARM_r41-x86_64-linux.tar.bz2"
        rm -rf $DEVKITARM
        tar xvjf devkitARM_r41-x86_64-linux.tar.bz2 -C $DEVKITPRO

        curl -LO "https://wii.leseratte10.de/devkitPro/libnds/libnds_1.5.7%20(2012)/libnds-1.5.7.tar.bz2"
        rm -rf $DEVKITPRO/libnds
        mkdir $DEVKITPRO/libnds
        tar xvjf libnds-1.5.7.tar.bz2 -C $DEVKITPRO/libnds

        # Installing new precompiled libfat
        # curl -LO "https://wii.leseratte10.de/devkitPro/libfat/libfat_1.0.7%20(2010)/libfat-nds-1.0.7.tar.bz2"
        # tar xvjf libfat-nds-1.0.7.tar.bz2 -C $DEVKITPRO/libnds
        # rm libfat-nds-1.0.7.tar.bz2
        # rm 14943_devkitARM_r21linux.tar.bz2
        # rm libnds-1.3.1.tar.bz2

        # Compiling new libfat
        mkdir libfatCompile
        cd libfatCompile
        curl -LO "https://wii.leseratte10.de/devkitPro/libfat/libfat_1.0.11%20(2012)/libfat-1.0.11.tar.gz"
        tar xvzf libfat-1.0.11.tar.gz
        cd libfat-1.0.11
        make include/libfatversion.h
        make nds-install
        cd ../
    - name: make
      run: |
        export DEVKITPRO=/opt/devkitpro
        export DEVKITARM=${DEVKITPRO}/devkitARM
        export PORTLIBS_ROOT=${DEVKITPRO}/portlibs
        export TOOL_PREFIX=arm-eabi-
        export CC=${TOOL_PREFIX}gcc
        export CXX=${TOOL_PREFIX}g++
        export AR=${TOOL_PREFIX}gcc-ar
        export RANLIB=${TOOL_PREFIX}gcc-ranlibmake

        export PATH=$PATH:${DEVKITPRO}/tools/bin:$DEVKITARM/bin
        
        echo "[PATH printed below]"
        echo $PATH
        
        echo "OS INFO PRINTED"
        lscpu

        echo "Checking status on arm-eabi-gcc"
        [ ! -f ${DEVKITARM}/bin/arm-eabi-gcc ] && echo "arm-eabi-gcc does not exist."
        [ -f ${DEVKITARM}/bin/arm-eabi-gcc ] && echo "arm-eabi-gcc does indeed exist."

        echo "SETTING PERMS"
        chmod -R 777 ${DEVKITPRO}

        echo "STARTING PERM CHECK"
        echo "[ls on DKA/bin printed below]"
        ls -l ${DEVKITARM}/bin
        echo "[stat on DKA/bin printed below]"
        stat ${DEVKITARM}/bin
        echo "[stat on arm-eabi-gcc printed below]"
        stat ${DEVKITARM}/bin/arm-eabi-gcc

        chmod +x ${DEVKITARM}/bin/arm-eabi-gcc
        echo "[attempt to run help command]"
        ${DEVKITARM}/bin/arm-eabi-gcc --help

        echo "[attempt to run make command]"
        make
